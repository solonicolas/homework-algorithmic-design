plot(0:23, d, type='b', axes=FALSE)
axis(side=1, at=c(0:23))
axis(side=2, at=seq(0, 600, by=100))
box()
plot(0:23, d, type='b', axes=FALSE)
axis(side=1, at=c(0:23))
axis(side=2, at=seq(0, 600, by=100))
box()
d = c(42,13,10,3,2,6,7,15,38,63,128,153,178,181,236,217,272,417,526,653,607,385,191,70)
plot(0:23, d, type='b', axes=FALSE)
axis(side=1, at=c(0:23))
axis(side=2, at=seq(0, 600, by=100))
box()
d = c(42,13,10,3,2,6,7,15,38,63,128,153,178,181,236,217,272,417,526,653,607,385,191,70)
plot(0:23, d, type='b', axes=FALSE)
axis(side=1, at=c(1,5,10))
axis(side=2, at=seq(0, 600, by=100))
box()
d = c(42,13,10,3,2,6,7,15,38,63,128,153,178,181,236,217,272,417,526,653,607,385,191,70)
plot(0:23, d, type='b', axes=FALSE)
axis(side=1, at=c(2^2,5,10))
axis(side=2, at=seq(0, 600, by=100))
box()
d = c(42,13,10,3,2,6,7,15,38,63,128,153,178,181,236,217,272,417,526,653,607,385,191,70)
plot(0:23, d, type='b', axes=FALSE)
axis(side=1, at=c(expression(2^2),5,10))
axis(side=2, at=seq(0, 600, by=100))
box()
Let's compare the different sorting algorithms applyed on sizes going from $2^2$ to $2^{13}$.
```{r, echo = F}
insertion_sort <- c(0.000001,0.000001,0.000006,0.000023,0.000089,0.000350,0.001401,0.005577, 0.022346,0.088890,0.354780,1.423707)
quick_sort <- c(0.000001,0.000002,0.000005,0.000010,0.000023,0.000056,0.000128,0.000278,0.000595,0.001347,0.002710,0.005686)
bubble_sort <-  c(0.000001,0.000001,0.000007,0.000023,0.000098,0.000397,0.001706,0.007351,0.033005,0.147866,0.640717,2.692697)
selection_sort <- c(0.000001,0.000002,0.000003,0.000005,0.000014,0.000041,0.000137,0.000489,0.001845,0.007105,0.027877,0.111241)
heap_sort <-  c(0.000001,0.000003,0.000008,0.000015,0.000032,0.000074,0.000169,0.000382,0.000858,0.001889,0.004154,0.009063)
quick_sort_select <-  c(0.000001,0.000002,0.000011,0.000033,0.000099,0.000272,0.000686,0.001650,0.003656,0.007754,0.015447,0.031117)
size <- c(2^2, 2^3, 2^4, 2^5, 2^6, 2^7, 2^8, 2^9, 2^10, 2^11, 2^12, 2^13)
plot(size, insertion_sort, type="l", col="black", log="y", ylab="log(time)", xlab="n")
lines(size, quick_sort, col="red")
lines(size, bubble_sort, col="blue")
lines(size, selection_sort, col="green")
lines(size, heap_sort, col="orange")
lines(size, quick_sort_select, col="pink")
legend(6000, 0.001, legend=c("insertion sort", "quick sort","bubble sort", "selection sort", "heap_sort", "quick sort select"),
col=c("black", "red", "blue", "green", "orange", "pink"), lty=1, cex=0.8)
```
?axix
Let's compare the different sorting algorithms applyed on sizes going from $2^2$ to $2^{13}$.
```{r, echo = F}
insertion_sort <- c(0.000001,0.000001,0.000006,0.000023,0.000089,0.000350,0.001401,0.005577, 0.022346,0.088890,0.354780,1.423707)
quick_sort <- c(0.000001,0.000002,0.000005,0.000010,0.000023,0.000056,0.000128,0.000278,0.000595,0.001347,0.002710,0.005686)
bubble_sort <-  c(0.000001,0.000001,0.000007,0.000023,0.000098,0.000397,0.001706,0.007351,0.033005,0.147866,0.640717,2.692697)
selection_sort <- c(0.000001,0.000002,0.000003,0.000005,0.000014,0.000041,0.000137,0.000489,0.001845,0.007105,0.027877,0.111241)
heap_sort <-  c(0.000001,0.000003,0.000008,0.000015,0.000032,0.000074,0.000169,0.000382,0.000858,0.001889,0.004154,0.009063)
quick_sort_select <-  c(0.000001,0.000002,0.000011,0.000033,0.000099,0.000272,0.000686,0.001650,0.003656,0.007754,0.015447,0.031117)
size <- c(2^2, 2^3, 2^4, 2^5, 2^6, 2^7, 2^8, 2^9, 2^10, 2^11, 2^12, 2^13)
plot(size, insertion_sort, type="l", col="black", log="y", ylab="log(time)", xlab="n")
lines(size, quick_sort, col="red")
lines(size, bubble_sort, col="blue")
lines(size, selection_sort, col="green")
lines(size, heap_sort, col="orange")
lines(size, quick_sort_select, col="pink")
legend(6000, 0.001, legend=c("insertion sort", "quick sort","bubble sort", "selection sort", "heap_sort", "quick sort select"),
col=c("black", "red", "blue", "green", "orange", "pink"), lty=1, cex=0.8)
```
help(axix)
Let's compare the different sorting algorithms applyed on sizes going from $2^2$ to $2^{13}$.
```{r, echo = F}
insertion_sort <- c(0.000001,0.000001,0.000006,0.000023,0.000089,0.000350,0.001401,0.005577, 0.022346,0.088890,0.354780,1.423707)
quick_sort <- c(0.000001,0.000002,0.000005,0.000010,0.000023,0.000056,0.000128,0.000278,0.000595,0.001347,0.002710,0.005686)
bubble_sort <-  c(0.000001,0.000001,0.000007,0.000023,0.000098,0.000397,0.001706,0.007351,0.033005,0.147866,0.640717,2.692697)
selection_sort <- c(0.000001,0.000002,0.000003,0.000005,0.000014,0.000041,0.000137,0.000489,0.001845,0.007105,0.027877,0.111241)
heap_sort <-  c(0.000001,0.000003,0.000008,0.000015,0.000032,0.000074,0.000169,0.000382,0.000858,0.001889,0.004154,0.009063)
quick_sort_select <-  c(0.000001,0.000002,0.000011,0.000033,0.000099,0.000272,0.000686,0.001650,0.003656,0.007754,0.015447,0.031117)
size <- c(2^2, 2^3, 2^4, 2^5, 2^6, 2^7, 2^8, 2^9, 2^10, 2^11, 2^12, 2^13)
plot(size, insertion_sort, type="l", col="black", log="y", ylab="log(time)", xlab="n")
lines(size, quick_sort, col="red")
lines(size, bubble_sort, col="blue")
lines(size, selection_sort, col="green")
lines(size, heap_sort, col="orange")
lines(size, quick_sort_select, col="pink")
legend(6000, 0.001, legend=c("insertion sort", "quick sort","bubble sort", "selection sort", "heap_sort", "quick sort select"),
col=c("black", "red", "blue", "green", "orange", "pink"), lty=1, cex=0.8)
```
??axix
Let's compare the different sorting algorithms applyed on sizes going from $2^2$ to $2^{13}$.
```{r, echo = F}
insertion_sort <- c(0.000001,0.000001,0.000006,0.000023,0.000089,0.000350,0.001401,0.005577, 0.022346,0.088890,0.354780,1.423707)
quick_sort <- c(0.000001,0.000002,0.000005,0.000010,0.000023,0.000056,0.000128,0.000278,0.000595,0.001347,0.002710,0.005686)
bubble_sort <-  c(0.000001,0.000001,0.000007,0.000023,0.000098,0.000397,0.001706,0.007351,0.033005,0.147866,0.640717,2.692697)
selection_sort <- c(0.000001,0.000002,0.000003,0.000005,0.000014,0.000041,0.000137,0.000489,0.001845,0.007105,0.027877,0.111241)
heap_sort <-  c(0.000001,0.000003,0.000008,0.000015,0.000032,0.000074,0.000169,0.000382,0.000858,0.001889,0.004154,0.009063)
quick_sort_select <-  c(0.000001,0.000002,0.000011,0.000033,0.000099,0.000272,0.000686,0.001650,0.003656,0.007754,0.015447,0.031117)
size <- c(2^2, 2^3, 2^4, 2^5, 2^6, 2^7, 2^8, 2^9, 2^10, 2^11, 2^12, 2^13)
plot(size, insertion_sort, type="l", col="black", log="y", ylab="log(time)", xlab="n")
lines(size, quick_sort, col="red")
lines(size, bubble_sort, col="blue")
lines(size, selection_sort, col="green")
lines(size, heap_sort, col="orange")
lines(size, quick_sort_select, col="pink")
legend(6000, 0.001, legend=c("insertion sort", "quick sort","bubble sort", "selection sort", "heap_sort", "quick sort select"),
col=c("black", "red", "blue", "green", "orange", "pink"), lty=1, cex=0.8)
```
??seq
